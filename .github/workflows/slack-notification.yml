name: Deployement Pipeline

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR Number'
        required: false
jobs:
  slackNotification:
    name: Slack Notification
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get PR Number
      id: pr_number
      if: ${{ github.event.inputs.pr_number == null }}
      run: |
        closed_prs=$(curl -sSL -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/pulls?state=closed")
        merged_prs=$(echo "$closed_prs" | jq '[.[] | select(.merged_at != null)]')
        pr_number=$(echo "$merged_prs" | grep -o '"number": [0-9]*' | awk 'NR==1{print $2}')
        echo "::set-output name=pr_number::$pr_number"
    - name: Get PR Details
      id: pr_details
      run: |
        if [ -z "${{ github.event.inputs.pr_number }}" ]; then
          pr_number="${{ steps.pr_number.outputs.pr_number }}"
        else
          pr_number="${{ github.event.inputs.pr_number }}"
        fi
        pr_details=$(curl -sSL -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/pulls/$pr_number")
        pr_title=$(echo "$pr_details" | jq -r '.title')
        pr_author=$(echo "$pr_details" | jq -r '.user.login')
        pr_url=$(echo "$pr_details" | jq -r '.html_url')
        pr_body=$(echo "$pr_details" | jq -r '.body')

        asana_link=$(echo "$pr_body" | grep -o 'https://app.asana.com/.*')
        task_id=$(echo "$asana_link" | sed 's/.*\/\([0-9]*\)$/\1/')
                
        echo "::set-output name=task_id::$task_id"
        echo "::set-output name=pr_number::$pr_number"
        echo "::set-output name=pr_title::$pr_title"
        echo "::set-output name=pr_author::$pr_author"
        echo "::set-output name=pr_url::$pr_url"
        echo "::set-output name=pr_body::$pr_body"

    # - name: Get Asana Link
    #   id: get_asana_link
    #   run: |
    #     pr_body="${{ steps.pr_details.outputs.pr_body }}"
    #     asana_link=$(echo "$pr_details" | grep -o 'https://app.asana.com/.*')
    #     echo "::set-output name=asana_link::$asana_link"

    # - name: Extract Task ID from Asana Link
    #   id: extract_task_id
    #   run: |
    #     pr_body="${{ steps.pr_details.outputs.pr_body }}"
    #     echo "pr_body: $pr_body"

    #     asana_link=$(echo "$pr_body" | grep -o 'https://app.asana.com/.*')
    #     task_id=$(echo "$asana_link" | sed 's/.*\/\([0-9]*\)$/\1/')
    #     echo "::set-output name=task_id::$task_id"

    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: testchannel
        MSG_MINIMAL: true
        SLACK_MSG_AUTHOR: '${{ steps.pr_details.outputs.pr_author }}'
        SLACK_TITLE: 'PR #${{ steps.pr_details.outputs.pr_number }}: ${{ steps.pr_details.outputs.pr_title }}'
        SLACK_MESSAGE: '${{ steps.pr_details.outputs.pr_url }}'
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_FOOTER: 'Powered by Dibbly Inc.'
    
    # - name: Update Asana task
    #   run: |
    #     ASANA_TASK_ID="${{ steps.pr_details.outputs.task_id }}"
    #     CURRENT_DATE=$(date +'%Y-%m-%d')
    #     BRANCH_NAME="${{ steps.pr_details.outputs.branch_name }}"
    #     PR_LINK="${{ steps.pr_details.outputs.pr_url }}"
    #     echo "ASANA_TASK_ID: $ASANA_TASK_ID"
    #     echo "CURRENT_DATE: $CURRENT_DATE"
    #     echo "BRANCH_NAME: $BRANCH_NAME"
    #     echo "PR_LINK: $PR_LINK"
    #     curl --request PUT \
    #       --url "https://app.asana.com/api/1.0/tasks/${ASANA_TASK_ID}" \
    #       --header 'Authorization: Bearer ${{ secrets.ASANA_PAT }}' \
    #       --header 'Content-Type: application/json' \
    #       --data '
    #       {
    #         "data": {
    #           "custom_fields": {
    #             "1205147978455517": "testflow/dev",
    #             "1205147978455522": "$PR_LINK"
    #           },
    #           "due_on": "'"$CURRENT_DATE"'"
    #         }
    #       }
    #       '